{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime-module.js","../node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","Components/Utils.js","Components/Home.js"],"names":["_getPrototypeOf","o","Object","setPrototypeOf","getPrototypeOf","__proto__","__webpack_require__","d","__webpack_exports__","_typeof2","obj","Symbol","iterator","constructor","prototype","_typeof","_possibleConstructorReturn","self","call","ReferenceError","_assertThisInitialized","_setPrototypeOf","p","_inherits","subClass","superClass","TypeError","create","value","writable","configurable","module","exports","g","this","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","undefined","e","global","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","GeneratorFunction","displayName","isGeneratorFunction","genFun","ctor","name","mark","awrap","arg","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","next","then","result","done","toString","keys","object","key","push","reverse","length","pop","Context","reset","skipTempReset","prev","sent","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","slice","stop","rootRecord","completion","type","rval","dispatchException","exception","context","handle","loc","caught","record","i","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","state","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","fn","err","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","unwrapped","error","return","info","pushTryEntry","locs","iteratorMethod","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","Utils","Component","bgColor","percent","r","Math","floor","parsedRColor","parseInt","parsedGColor","fontColor","Home","props","_this","classCallCheck","possibleConstructorReturn","timerInterval","userModel","userState","setBatteryState","_ref","regenerator_default","a","_callee","batteryOptions","_context","setState","setUserState","objectSpread","_x","getBatteryAPI","_callee2","_context2","navigator","console","log","UserModel","getBatteryTimeText","currBatteryTime","getBattery","battery","batteryLevel","level","batteryState","charging","Date","now","registerNotificationwithAccess","_callee3","_context3","window","Notification","permission","requestPermission","status","showNotification","_callee4","appTitle","text","_context4","AppTitle","getBatteryStateText","notifyBatteryState","notifyBatteryLevel","body","icon","logo","tag","requestermission","Model","_this2","setInterval","_callee5","_context5","notificationSent","clearInterval","react_default","createElement","Wrapper","className","style","backgroundColor","color","ref","getBatteryLevelText","styled","div","_templateObject"],"mappings":"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","file":"static/js/1.de8aa02d.chunk.js","sourcesContent":["export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { Component } from 'react';\r\n\r\nclass Utils extends Component {\r\n\r\n    static bgColor = (percent) => {\r\n        const r = percent < 50 || percent === 0 ? 255 : Math.floor(255-(percent*2-100)*255/100);\r\n        const g = percent > 50 ? 255 : Math.floor(((percent*2)*255)/100);\r\n        const parsedRColor = !isNaN(parseInt(r.toString())) ? parseInt(r.toString()) : 0;\r\n        const parsedGColor = !isNaN(parseInt(g.toString())) ? parseInt(g.toString()) : 0;\r\n        //console.log('bgColor for '+ percent.toString() +' : rgb(' + parsedRColor.toString() + ',' + parsedGColor.toString() + ',0)');\r\n        return 'rgb(' + parsedRColor.toString() + ',' + parsedGColor.toString() + ',0)';\r\n    }\r\n\r\n    static fontColor = (percent) => {\r\n        return (percent >= 45 && percent <= 60) ? 'black' : 'white';\r\n    }\r\n\r\n}\r\n\r\nexport default Utils;\r\n","import React, { Component } from 'react';\nimport styled from \"styled-components\";\nimport logo from \"../assets/ic_launcher.png\";\nimport Utils from './Utils';\nimport { UserModel } from \"./UserModel\";\n\nclass Home extends Component {\n\n  timerInterval = 0;\n  userModel = null;\n  userState = null;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      userState : this.props.Model.state\n    }\n    this.userModel = this.props.Model;\n    this.userState = this.props.Model.state;\n    console.log('Home - ' + Object.getOwnPropertyNames(this.props.Model));\n    console.log('User state - ' + this.userState);\n  }\n\n  setBatteryState = async (batteryOptions) => {\n    this.setState({\n      userState: this.userModel.setUserState(\n        this.userState = {\n          ...this.userState,\n          ...batteryOptions,\n        }\n      )\n    },);\n  }\n\n  getBatteryAPI = async () => {\n    if ('getBattery' in navigator) {\n      console.log(UserModel.getBatteryTimeText(this.userState.currBatteryTime) + ' - The Battery Status API is supported on this platform.');\n      console.log(this.userState);\n      await navigator.getBattery().then(battery => this.setBatteryState({ batteryLevel: battery.level, batteryState: battery.charging, currBatteryTime: Date.now(), }));\n    } \n    else {\n      console.log('The Battery API is not supported on this platform');\n    }\n  }\n\n  registerNotificationwithAccess = async () => {\n    if (window.Notification && Notification.permission !== \"granted\") {\n      Notification.requestPermission(function (status) {\n        if (Notification.permission !== status) {\n          Notification.permission = status;\n        }\n      });\n    }\n  }\n\n  showNotification = async () => {\n    const appTitle = this.props.AppTitle;\n    const text = UserModel.getBatteryStateText(this.userState.notifyBatteryState) + ' with ' + this.userState.notifyBatteryLevel.toString() + '% is now complete.';\n    if (window.Notification && Notification.permission === \"granted\") {\n      new Notification(appTitle, { body: text, icon: logo, tag: 'soManyNotification'});\n    }\n    else if (window.Notification && Notification.permission !== \"denied\") {\n      Notification.requestermission(function (status) {\n        if (status === \"granted\") {\n          new Notification(appTitle, { body: text, icon: logo, tag: 'soManyNotification'});\n        }\n        else {\n          console.log(\"permission not granted - 2\");\n        }\n      });\n    }\n    else {\n      console.log(\"permission not granted - 1\");\n    }\n  }\n  \n  componentDidMount() {\n    this.timerInterval = setInterval(async () => { \n      await this.getBatteryAPI() \n      if(this.userState.notificationSent === false && this.userState.batteryState === this.userState.notifyBatteryState && this.userState.batteryLevel*100 === this.userState.notifyBatteryLevel) {\n        this.showNotification();\n        this.setBatteryState({ notificationSent : true })\n        clearInterval(this.timerInterval);\n      }\n      else if(this.userState.batteryState === this.userState.notifyBatteryState \n        && ((this.userState.batteryState && this.userState.batteryLevel*100 >= this.userState.notifyBatteryLevel) \n            || (!this.userState.batteryState && this.userState.batteryLevel*100 <= this.userState.notifyBatteryLevel))) {\n        clearInterval(this.timerInterval);\n      }\n    }, 1000);\n    this.registerNotificationwithAccess();\n    //setTimeout(() => this.showNotification(), 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerInterval);\n  }\n\n  render() {     \n    const batteryLevel = this.userState.batteryLevel*100;\n    return (\n      <Wrapper>\n        <div className=\"App App-body\">\n            <div className=\"circle\" \n                style={{ backgroundColor: Utils.bgColor(batteryLevel)\n                        , color: Utils.fontColor(batteryLevel) }} >\n              <div className=\"innerCircleContents\" >\n                <div className=\"contentHeader\" ref=\"contentHeader\">\n                  {UserModel.getBatteryStateText(this.userState.batteryState)}\n                </div>\n                <div className=\"contentBody\" ref=\"contentBody\">\n                  {UserModel.getBatteryLevelText(this.userState.batteryLevel)}\n                </div>\n                <div className=\"contentFooter\" ref=\"contentFooter\">\n                  {UserModel.getBatteryTimeText(this.userState.currBatteryTime)}\n                </div>\n              </div>\n            </div>\n            {/* <p>\n              Edit <code>src/App.js</code> and save to reload.\n            </p>\n            <a\n              className=\"App-link\"\n              href=\"https://reactjs.org\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Learn React\n            </a> */}\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\nconst Wrapper = styled.div`\n.App {\n  text-align: center;\n}\n\n.App-body {\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.circle {\n  width:45vmax;\n  height:45vmax;\n  border-radius:50%;\n  box-sizing: border-box;\n  position:relative;\n  background:rgb(240, 16, 102);\n  color: white;\n  font-family: Helvetica, Arial Black, sans;\n  border:solid 0px greenyellow;\n  transform: scale(1);\n  transition:transform ease-in-out 250;\n}\n\n.circle:hover {\n  transform:scale(1.010);\n}\n\n.innerCircleContents {\n  margin:auto;\n  padding:25% 0;\n  width:100%;\n  height:50%;\n  place-items:center;\n  display: grid;\n  grid-auto-flow:row;\n  grid-gap: 5px;\n}\n\n.contentHeader {\n  width:50%;\n  border:0px solid greenyellow;\n  font-size: calc(8px + 4vmin);\n}\n\n.contentBody {\n  width:100%;\n  border:0px solid greenyellow;\n  font-size: calc(8px + 20vmin);\n}\n\n.contentFooter {\n  border:0px solid greenyellow;\n  width:50%;\n  font-size: calc(8px + 2vmin);\n  word-wrap: break-word;\n  overflow-wrap: break-word;\n}\n`\nexport default Home;\n"],"sourceRoot":""}