{"version":3,"sources":["Components/Utils.js","ic_launcher.png","serviceWorker.js","global-styles.js","index.js"],"names":["Utils","setBatteryState","_setBatteryState","Object","C_VSCodeProjects_reactjsbatterynotifier_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","C_VSCodeProjects_reactjsbatterynotifier_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","batteryOptions","userState","wrap","_context","prev","next","abrupt","C_VSCodeProjects_reactjsbatterynotifier_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","stop","_x","_x2","apply","this","arguments","loadingMessage","props","react__WEBPACK_IMPORTED_MODULE_4___default","createElement","style","margin","height","backgroundColor","textAlign","alignItems","paddingTop","display","gridAutoFlow","gridGap","placeItems","src","logo","alt","color","fontSize","toastMessage","styles","visibility","message","length","width","borderRadius","padding","position","zIndex","left","bottom","className","C_VSCodeProjects_reactjsbatterynotifier_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","map","text","index","key","showToastMessage","logText","_len","rest","Array","_key","console","log","bgColor","percent","r","Math","floor","g","parsedRColor","isNaN","parseInt","toString","parsedGColor","fontColor","getBatteryStateText","batState","getBatteryLevelText","batLvl","getBatteryTimeText","timeTxt","dateVal","Date","toLocaleDateString","toLocaleTimeString","showNotification","_showNotification","_callee5","title","body","appTitle","swRegistration","notifywithSWReadyRegister","callNotify","_context5","navigator","serviceWorker","ready","sent","_ref","_callee2","registration","_context2","icon","tag","data","dateOfArrival","now","primaryKey","t0","concat","_x6","_ref2","_callee3","_context3","undefined","window","Notification","permission","requestermission","_ref3","_callee4","status","_context4","_x7","_x3","_x4","_x5","getDbContext","_getDbContext","_callee6","_context6","idb","open","upgradeDB","oldVersion","createObjectStore","keyPath","autoIncrement","storeItemsLocally","_storeItemsLocally","_callee7","dbcontext","obj","_context7","JSON","parse","stringify","then","db","tx","transaction","objectStore","clear","put","complete","catch","err","_x8","_x9","getItemsLocally","_getItemsLocally","_callee8","listItems","_context8","Set","getAll","allObjs","s","add","_x10","module","exports","__webpack_require__","p","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","register","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","addEventListener","event","indexPage","Request","waitUntil","fetch","response","caches","cache","url","request","respondWith","error","matching","Promise","reject","onSuccess","injectGlobal","_templateObject","Container","React","lazy","all","e","bind","ReactDOM","render","react_default","es","Suspense","fallback","document","getElementById","URL","process","href","origin","contentType","headers","get","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"qLAIIA,EAAQ,CAEXC,gBAAe,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAE,SAAAC,EAAOC,EAAgBC,GAAvB,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,OAAA,SAAAZ,OAAAa,EAAA,EAAAb,CAAA,GACLO,EAAcD,IADT,wBAAAG,EAAAK,SAAAT,MAAF,gBAAAU,EAAAC,GAAA,OAAAjB,EAAAkB,MAAAC,KAAAC,YAAA,GAIfC,eAAgB,SAACC,GAqBf,OACCC,EAAAnB,EAAAoB,cAAA,OAAKC,MArBkB,CACvBC,OAAO,OACPC,OAAO,QACPC,gBAAgB,YAChBC,UAAU,SACVC,WAAW,WAiBVP,EAAAnB,EAAAoB,cAAA,OAAKC,MAfmB,CACzBM,WAAW,OACXC,QAAS,OACTC,aAAa,MACbC,QAAS,MACTC,WAAW,WAWTZ,EAAAnB,EAAAoB,cAAA,OAAKY,IAAKC,IAAMC,IAAI,KACpBf,EAAAnB,EAAAoB,cAAA,QAAMC,MATS,CACjBc,MAAM,QACNC,SAAU,SAOR,iBAMLC,aAAc,SAACnB,GACd,IAAMoB,EAAS,CACdC,WAAqC,IAAzBrB,EAAMsB,QAAQC,OAAe,SAAU,UACnDC,MAAM,OACNlB,gBAAiB,0BACjBW,MAAO,QACPV,UAAW,SACXkB,aAAc,MACdC,QAAS,OACTC,SAAU,QACVC,OAAQ,IACRC,KAAM,MACNC,OAAQ,OACRZ,SAAS,QAGV,OACCjB,EAAAnB,EAAAoB,cAAA,OAAK6B,UAAW/B,EAAM+B,UAAW5B,MAAOiB,GACtCzC,OAAAqD,EAAA,EAAArD,CAAIqB,EAAMsB,SAASW,IAAI,SAACC,EAAMC,GAAP,OAAiBlC,EAAAnB,EAAAoB,cAAA,OAAKkC,IAAKD,GAASD,OAK/DG,iBAAkB,SAACf,EAASS,GAC3B,OACK9B,EAAAnB,EAAAoB,cAAC1B,EAAM2C,aAAP,CACCY,UAAWA,EAEXT,QAASA,KAKhBgB,QAAS,mBAAAC,EAAAzC,UAAAyB,OAAIiB,EAAJ,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAIF,EAAJE,GAAA5C,UAAA4C,GAAA,OAAaC,QAAQC,IAAIJ,IAElCK,QAAS,SAACC,GACR,IAAMC,EAAID,EAAU,IAAkB,IAAZA,EAAgB,IAAME,KAAKC,MAAM,IAAoB,KAAP,EAARH,EAAU,KAAS,KAC7EI,EAAIJ,EAAU,GAAK,IAAME,KAAKC,MAAgB,EAARH,EAAW,IAAK,KACtDK,EAAgBC,MAAMC,SAASN,EAAEO,aAAwC,EAAzBD,SAASN,EAAEO,YAC3DC,EAAgBH,MAAMC,SAASH,EAAEI,aAAwC,EAAzBD,SAASH,EAAEI,YAEjE,MAAO,OAASH,EAAaG,WAAa,IAAMC,EAAaD,WAAa,OAG5EE,UAAW,SAACV,GACV,MAAO,SAGTW,oBAAqB,SAACC,GACrB,OAAgB,MAAZA,GACc,IAAbA,EACI,YACgB,IAAbA,EACH,cAEA,OAGD,IAITC,oBAAqB,SAACC,GACrB,OAAOZ,KAAKC,MAAe,IAATW,GAAgB,KAGnCC,mBAAoB,SAACC,GACpB,IAAMC,EAAU,IAAIC,KAAKF,GACzB,OAAOC,EAAQE,qBAAuB,IAAMF,EAAQG,sBAGrDC,iBAAgB,eAAAC,EAAAzF,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAE,SAAAsF,EAAOC,EAAOvD,EAAMwD,GAApB,IAAAC,EAAAtC,EAAAuC,EAAAC,EAAAC,EAAA,OAAA9F,EAAAC,EAAAK,KAAA,SAAAyF,GAAA,cAAAA,EAAAvF,KAAAuF,EAAAtF,MAAA,cACXkF,EAAWF,EACXpC,EAAOqC,EAFIK,EAAAtF,KAAA,EAGYuF,UAAUC,cAAcC,MAHpC,UAGXN,EAHWG,EAAAI,KAIjBrC,QAAQC,IAAI,oBAAqB6B,GAgB3BC,EApBW,eAAAO,EAAAtG,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAoBiB,SAAAmG,EAAOC,GAAP,OAAAtG,EAAAC,EAAAK,KAAA,SAAAiG,GAAA,cAAAA,EAAA/F,KAAA+F,EAAA9F,MAAA,cAAA8F,EAAA/F,KAAA,EAK/B8F,EAAahB,iBAAiBK,EAAU,CACvCD,KAAMrC,EACNmD,KAAMtE,EAENuE,IAAKhB,EACLiB,KAAM,CACLC,cAAexB,KAAKyB,MACpBC,WAAY,KAZiBN,EAAA7F,OAAA,UAqBxB,GArBwB,cAAA6F,EAAA/F,KAAA,EAAA+F,EAAAO,GAAAP,EAAA,SAwB/BzC,QAAQC,IAAR,yCAAAgD,OAAAR,EAAAO,KAxB+BP,EAAA7F,OAAA,UAyBxB,GAzBwB,wBAAA6F,EAAA3F,SAAAyF,EAAA,iBApBjB,gBAAAW,GAAA,OAAAZ,EAAArF,MAAAC,KAAAC,YAAA,GAwDX6E,EAxDW,eAAAmB,EAAAnH,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAwDE,SAAAgH,IAAA,OAAAlH,EAAAC,EAAAK,KAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,eACI2G,IAAnBxB,EADe,CAAAuB,EAAA1G,KAAA,eAAA0G,EAAA1G,KAAA,EAEJoF,EAA0BD,GAFtB,cAAAuB,EAAAzG,OAAA,SAAAyG,EAAAhB,MAAA,cAAAgB,EAAAzG,OAAA,UAKV,GALU,wBAAAyG,EAAAvG,SAAAsG,MAxDF,yBAAAD,EAAAlG,MAAAC,KAAAC,YAAA,IAoEboG,OAAOC,cAA4C,YAA5BA,aAAaC,WApEvB,CAAAxB,EAAAtF,KAAA,gBAAAsF,EAAAtF,KAAA,GAqEHqF,IArEG,eAAAC,EAAArF,OAAA,SAAAqF,EAAAI,MAAA,QAsENkB,OAAOC,cAA4C,WAA5BA,aAAaC,WAC9CD,aAAaE,iBAAb,eAAAC,EAAA3H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAA8B,SAAAwH,EAAOC,GAAP,OAAA3H,EAAAC,EAAAK,KAAA,SAAAsH,GAAA,cAAAA,EAAApH,KAAAoH,EAAAnH,MAAA,UACd,YAAXkH,EADyB,CAAAC,EAAAnH,KAAA,eAAAmH,EAAAnH,KAAA,EAEfqF,IAFe,cAAA8B,EAAAlH,OAAA,SAAAkH,EAAAzB,MAAA,OAI5BrC,QAAQC,IAAI,8BAJgB,wBAAA6D,EAAAhH,SAAA8G,MAA9B,gBAAAG,GAAA,OAAAJ,EAAA1G,MAAAC,KAAAC,YAAA,IAQA6C,QAAQC,IAAI,8BA/EI,yBAAAgC,EAAAnF,SAAA4E,MAAF,gBAAAsC,EAAAC,EAAAC,GAAA,OAAAzC,EAAAxE,MAAAC,KAAAC,YAAA,GAmFhBgH,aAAY,eAAAC,EAAApI,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAE,SAAAiI,IAAA,OAAAnI,EAAAC,EAAAK,KAAA,SAAA8H,GAAA,cAAAA,EAAA5H,KAAA4H,EAAA3H,MAAA,cAAA2H,EAAA1H,OAAA,SACJ2H,IAAIC,KAAK,0BAA2B,EAAG,SAAAC,GAC5C,OAAQA,EAAUC,YAChB,KAAK,EACHD,EAAUE,kBAAkB,sBAAuB,CAACC,QAAS,KAAMC,eAAc,IACjF,MACF,QACEJ,EAAUE,kBAAkB,sBAAuB,CAACC,QAAS,KAAMC,eAAc,QAP5E,wBAAAP,EAAAxH,SAAAuH,MAAF,yBAAAD,EAAAnH,MAAAC,KAAAC,YAAA,GAYX2H,kBAAiB,eAAAC,EAAA/I,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAE,SAAA4I,EAAOC,EAAWC,GAAlB,OAAAhJ,EAAAC,EAAAK,KAAA,SAAA2I,GAAA,cAAAA,EAAAzI,KAAAyI,EAAAxI,MAAA,OACnBuI,EAAME,KAAKC,MAAMD,KAAKE,UAAUJ,IAChClF,QAAQC,IAAI,2CAA4CiF,GACtDD,EACKM,KAAK,SAAAC,GACJ,IAAMC,EAAKD,EAAGE,YAAY,sBAAuB,aAGjD,OAFAD,EAAGE,YAAY,uBAAuBC,QAC3CH,EAAGE,YAAY,uBAAuBE,IAAtC7J,OAAAa,EAAA,EAAAb,CAAA,GAA8CkJ,IAClCO,EAAGK,WAEXC,MAAM,SAAAC,GAEL,OADAhG,QAAQC,IAAR,UAAAgD,OAAsB+C,KACf,IAZI,wBAAAb,EAAArI,SAAAkI,MAAF,gBAAAiB,EAAAC,GAAA,OAAAnB,EAAA9H,MAAAC,KAAAC,YAAA,GAgBjBgJ,gBAAe,eAAAC,EAAApK,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAE,SAAAiK,EAAOpB,GAAP,IAAAqB,EAAA,OAAApK,EAAAC,EAAAK,KAAA,SAAA+J,GAAA,cAAAA,EAAA7J,KAAA6J,EAAA5J,MAAA,cACX2J,EAAY,IAAIE,IADLD,EAAA3J,OAAA,SAERqI,EACJM,KAAK,SAAAC,GACL,OAAOA,EAAGE,YAAY,uBAAuBC,YAAY,uBAAuBc,WAEhFlB,KAAK,SAAAmB,GAEL,OADA1K,OAAAqD,EAAA,EAAArD,CAAI0K,GAASpH,IAAI,SAAAqH,GAAC,OAAIL,EAAUM,IAAV5K,OAAAa,EAAA,EAAAb,CAAA,GAAmB2K,MAClCL,IAEPP,MAAM,SAAAC,GAEN,OADAhG,QAAQC,IAAR,UAAAgD,OAAsB+C,IACfM,KAZK,wBAAAC,EAAAzJ,SAAAuJ,MAAF,gBAAAQ,GAAA,OAAAT,EAAAnJ,MAAAC,KAAAC,YAAA,IAiBFtB,0BChPfiL,EAAAC,QAAiBC,EAAAC,EAAuB,iKCYlCC,EAAcC,QACW,cAA7B5D,OAAO6D,SAASC,UAEe,UAA7B9D,OAAO6D,SAASC,UAEhB9D,OAAO6D,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BvF,UAAUC,cACPuF,SAASF,GACTjC,KAAK,SAAA/C,GACJA,EAAamF,cAAgB,WAC3B,IAAMC,EAAmBpF,EAAaqF,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACf7F,UAAUC,cAAc6F,YAI1BhI,QAAQC,IACN,gHAKEwH,GAAUA,EAAOQ,UACnBR,EAAOQ,SAASzF,KAIlBe,OAAO2E,iBAAiB,UAAW,SAASC,GAC1C,IAAIC,EAAY,IAAIC,QAAQ,cAC5BF,EAAMG,UACJC,MAAMH,GAAW7C,KAAK,SAASiD,GAC7B,OAAOC,OAAOjE,KAAK,sBAAsBe,KAAK,SAASmD,GAErD,OADA1I,QAAQC,IAAI,iDAAkDuI,EAASG,KAChED,EAAM7C,IAAIuC,EAAWI,UAMpCjF,OAAO2E,iBAAiB,QAAS,SAASC,GACxC,IAA2BS,EAS3BT,EAAMG,WATqBM,EASCT,EAAMS,QARzBH,OAAOjE,KAAK,sBAAsBe,KAAK,SAAUmD,GACtD,OAAOH,MAAMK,GAASrD,KAAK,SAAUiD,GAEnC,OADAxI,QAAQC,IAAI,oCAAoCuI,EAASG,KAClDD,EAAM7C,IAAI+C,EAASJ,SAOhCL,EAAMU,YACJN,MAAMJ,EAAMS,SAAS7C,MAAM,SAAS+C,GAMlC,OALA9I,QAAQC,IAAK,qEAAuE6I,GAK7EL,OAAOjE,KAAK,sBAAsBe,KAAK,SAAUmD,GACtD,OAAOA,EAAMpB,MAAMa,EAAMS,SAASrD,KAAK,SAAUwD,GAE/C,OADeA,GAAgC,MAApBA,EAASlF,OAA2CkF,EAA5BC,QAAQC,OAAO,qBAW5EjJ,QAAQC,IAAI,sCAGRwH,GAAUA,EAAOyB,WACnBzB,EAAOyB,UAAU1G,UAO5BuD,MAAM,SAAA+C,GACL9I,QAAQ8I,MAAM,4CAA6CA,uhBCxIjEK,YAAYC,iBCINC,EAAYC,IAAMC,KAAK,kBAAMP,QAAAQ,IAAA,CAAAxC,EAAAyC,EAAA,GAAAzC,EAAAyC,EAAA,KAAAlE,KAAAyB,EAAA0C,KAAA,YAYnCC,IAASC,OAAOC,EAAA1N,EAAAoB,cAVJ,WACX,OACCsM,EAAA1N,EAAAoB,cAACuM,EAAA,EAAD,KACGD,EAAA1N,EAAAoB,cAACsM,EAAA1N,EAAM4N,SAAP,CAAgBC,SAAUnO,IAAMuB,kBACjCyM,EAAA1N,EAAAoB,cAAC8L,EAAD,SAMY,MAASY,SAASC,eAAe,SFI1C,SAAkBzC,GACvB,GAAI,kBAAmBvF,UAAoD,CAGzE,GADkB,IAAIiI,IAAIC,0BAAwB7G,OAAO6D,SAASiD,MACpDC,SAAW/G,OAAO6D,SAASkD,OAIvC,OAGF/G,OAAO2E,iBAAiB,OAAQ,WAC9B,IAAMV,EAAK,GAAAvE,OAAMmH,0BAAN,sBAEPlD,GA0GV,SAAiCM,EAAOC,GAEtCc,MAAMf,GACHjC,KAAK,SAAAiD,GAEJ,IAAM+B,EAAc/B,EAASgC,QAAQC,IAAI,gBAEnB,MAApBjC,EAAS3E,QACO,MAAf0G,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CxI,UAAUC,cAAcC,MAAMmD,KAAK,SAAA/C,GACjCA,EAAamI,aAAapF,KAAK,WAC7BhC,OAAO6D,SAASwD,aAKpBrD,EAAgBC,EAAOC,KAG1B1B,MAAM,WACL/F,QAAQC,IACN,mEA/HA4K,CAAwBrD,EAAOC,GAI/BvF,UAAUC,cAAcC,MAAMmD,KAAK,WACjCvF,QAAQC,IACN,+GAMJsH,EAAgBC,EAAOC,ME3B/BtF","file":"static/js/main.cef4c659.chunk.js","sourcesContent":["import React from \"react\";\r\nimport idb from \"idb\";\r\nimport logo from \"../ic_launcher.png\";\r\n\r\nlet Utils = {\r\n\t\r\n\tsetBatteryState: async (batteryOptions, userState) => {\r\n\t\treturn {...userState,\t...batteryOptions,}\r\n  },\r\n\r\n\tloadingMessage: (props) => {\r\n\t\t\tconst loadingDivStyle = {\r\n\t\t\t\tmargin:'auto',\r\n\t\t\t\theight:'100vh',\r\n\t\t\t\tbackgroundColor:'lightgrey',\r\n\t\t\t\ttextAlign:'center',\r\n\t\t\t\talignItems:'center',\r\n\t\t\t}\r\n\t\t\tconst containerDivStyle = {\r\n\t\t\t\tpaddingTop:'90px',\r\n\t\t\t\tdisplay: 'grid',\r\n\t\t\t\tgridAutoFlow:'row',\r\n\t\t\t\tgridGap: '5px',\r\n\t\t\t\tplaceItems:'center'\r\n\t\t\t}\r\n\t\t\r\n\t\t\tconst spanStyle = {\r\n\t\t\t\tcolor:'black',\r\n\t\t\t\tfontSize: '25px'\r\n\t\t\t}\r\n\t\t\r\n\t\t\treturn (\r\n\t\t\t\t<div style={loadingDivStyle}>\r\n\t\t\t\t\t<div style={containerDivStyle}>\r\n\t\t\t\t\t\t<img src={logo} alt=\"\" />  \r\n\t\t\t\t\t\t<span style={spanStyle}>loading...</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\t\t\r\n\t},\r\n\r\n\ttoastMessage: (props) => {\r\n\t\tconst styles = {\r\n\t\t\tvisibility:(props.message.length === 0 ? 'hidden': 'visible'),\r\n\t\t\twidth:'45vw',\r\n\t\t\tbackgroundColor: 'rgba(255, 255, 153, .8)', /* background color */\r\n\t\t\tcolor: 'black', /* text color */\r\n\t\t\ttextAlign: 'center', /* Centered text */\r\n\t\t\tborderRadius: '5px', /* Rounded borders */\r\n\t\t\tpadding: '12px', /* Padding */\r\n\t\t\tposition: 'fixed', /* Sit on top of the screen */\r\n\t\t\tzIndex: '1', /* Add a z-index if needed */\r\n\t\t\tleft: '25%', /* Center the snackbar */\r\n\t\t\tbottom: '30px', /* 30px from the bottom */\r\n\t\t\tfontSize:'.8em'\r\n\t\t\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div className={props.className} style={styles} >\r\n\t\t\t\t{[...props.message].map((text, index) => <div key={index} >{text}</div>)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t},\r\n\r\n\tshowToastMessage: (message, className) => {\r\n\t\treturn\t(\r\n\t\t\t\t\t\t\t<Utils.toastMessage \r\n\t\t\t\t\t\t\t\tclassName={className}\r\n\t\t\t\t\t\t\t\t// {message === '' ? \"animated fadeOutDownBig\" : \"animated fadeInUpBig delay-2s\"} \r\n\t\t\t\t\t\t\t\tmessage={message}>\r\n\t\t\t\t\t\t\t</Utils.toastMessage>\r\n\t\t\t\t\t\t)\r\n\t},\r\n\t\r\n\tlogText: (...rest) => console.log(rest),\r\n\r\n\tbgColor: (percent) => {\r\n\t\t\tconst r = percent < 50 || percent === 0 ? 255 : Math.floor(255-(percent*2-100)*255/100);\r\n\t\t\tconst g = percent > 50 ? 255 : Math.floor(((percent*2)*255)/100);\r\n\t\t\tconst parsedRColor = !isNaN(parseInt(r.toString())) ? parseInt(r.toString()) : 0;\r\n\t\t\tconst parsedGColor = !isNaN(parseInt(g.toString())) ? parseInt(g.toString()) : 0;\r\n\t\t\t//console.log('bgColor for '+ percent.toString() +' : rgb(' + parsedRColor.toString() + ',' + parsedGColor.toString() + ',0)');\r\n\t\t\treturn 'rgb(' + parsedRColor.toString() + ',' + parsedGColor.toString() + ',0)';\r\n\t},\r\n\r\n\tfontColor: (percent) => {\r\n\t\t\treturn 'black';//(percent >= 45 && percent <= 60) ? 'black' : 'white';\r\n\t},\r\n\r\n\tgetBatteryStateText: (batState) => {\r\n\t\tif (batState != null) {\r\n\t\t\tif (batState === true) {\r\n\t\t\t\treturn 'Charging';\r\n\t\t\t} else if (batState === false) {\r\n\t\t\t\treturn 'Discharging';\r\n\t\t\t} else {\r\n\t\t\t\treturn 'Full';\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t},\r\n\r\n\tgetBatteryLevelText: (batLvl) => {\r\n\t\treturn Math.floor(batLvl * 100) + '%';\r\n\t},\r\n\r\n\tgetBatteryTimeText: (timeTxt) => {\r\n\t\tconst dateVal = new Date(timeTxt)\r\n\t\treturn dateVal.toLocaleDateString() + ' ' + dateVal.toLocaleTimeString();\r\n\t},\r\n\r\n\tshowNotification: async (title, logo, body) => {\r\n\t\tconst appTitle = title;\r\n\t\tconst text = body;\r\n\t\tconst swRegistration = await navigator.serviceWorker.ready;//.getRegistration(new URL(process.env.PUBLIC_URL, window.location.href));\r\n\t\tconsole.log('swRegistration : ', swRegistration);\r\n\t\r\n\t\t// const notifyWithNoSW = async () => {\r\n\t\t// \ttry {\r\n\t\t// \t\tnew Notification(appTitle+':NoSW', {\r\n\t\t// \t\t\tbody: text,\r\n\t\t// \t\t\ticon: logo,\r\n\t\t// \t\t\ttag: 'soManyNotification'\r\n\t\t// \t\t});\t\t\t\t\t\r\n\t\t// \t} catch (err) {\r\n\t\t// \t\tconsole.log(`Error for new Notification : ${err}`);\r\n\t\t// \t\treturn false;\r\n\t\t// \t}\r\n\t\t// \treturn true;\r\n\t\t// }\r\n\r\n\t\tconst notifywithSWReadyRegister = async (registration) => {\r\n\t\t\t//navigator.serviceWorker.getRegistration(new URL(process.env.PUBLIC_URL, window.location.href))\r\n\t\t\t// navigator.serviceWorker.ready\r\n\t\t\t// .then(async (registration) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tregistration.showNotification(appTitle, {\r\n\t\t\t\t\t\tbody: text,\r\n\t\t\t\t\t\ticon: logo,\r\n\t\t\t\t\t\t//vibrate: [200, 100, 200, 100, 200, 100, 200],\r\n\t\t\t\t\t\ttag: title,\r\n\t\t\t\t\t\tdata: {\r\n\t\t\t\t\t\t\tdateOfArrival: Date.now(),\r\n\t\t\t\t\t\t\tprimaryKey: 1\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t// actions: [\r\n\t\t\t\t\t\t// \t{action: 'explore', title: 'Explore this new world',\r\n\t\t\t\t\t\t// \t\ticon: 'images/checkmark.png'},\r\n\t\t\t\t\t\t// \t{action: 'close', title: 'Close notification',\r\n\t\t\t\t\t\t// \t\ticon: 'images/xmark.png'},\r\n\t\t\t\t\t\t// ]\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\tcatch(err) {\r\n\t\t\t\t\tconsole.log(`Error for notifywithSWReadyRegister : ${err}`);\r\n\t\t\t\t\treturn false;//await notifyWithNoSW();\r\n\t\t\t\t}\r\n\r\n\t\t// \t\t})\r\n\t\t// \t\t.catch(async err => {\r\n\t\t// \t\t\tconsole.log(`Error for notifywithSWReadyRegister : ${err}`);\r\n\t\t// \t\t\treturn await notifyWithNoSW();\r\n\t\t// \t\t});\r\n\t\t// \t\treturn true;\r\n\t\t};\t\r\n\r\n\t\tconst callNotify = async () => {\r\n\t\t\tif(swRegistration !== undefined) {\r\n\t\t\t\treturn await notifywithSWReadyRegister(swRegistration);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t// else {\r\n\t\t\t// \treturn await notifyWithNoSW(); \r\n\t\t\t// }\t\t\t\r\n\t\t}\r\n\r\n\t\tif (window.Notification && Notification.permission === \"granted\") {\r\n\t\t\treturn await callNotify();\r\n\t\t} else if (window.Notification && Notification.permission !== \"denied\") {\r\n\t\t\tNotification.requestermission(async (status) => {\r\n\t\t\t\tif (status === \"granted\") {\r\n\t\t\t\t\treturn await callNotify();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(\"permission not granted - 2\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tconsole.log(\"permission not granted - 1\");\r\n\t\t}\r\n\t},\r\n\r\n\tgetDbContext: async () => {\r\n    return idb.open('BatteryNotifierDatabase', 1, upgradeDB => {\r\n      switch (upgradeDB.oldVersion) {\r\n        case 1:\r\n          upgradeDB.createObjectStore('BatteryNotifierList', {keyPath: 'id', autoIncrement:true});\r\n          break;\r\n        default:\r\n          upgradeDB.createObjectStore('BatteryNotifierList', {keyPath: 'id', autoIncrement:true});  \r\n      }\r\n    });\r\n  },\r\n\r\n  storeItemsLocally: async (dbcontext, obj) => {\r\n\t\tobj = JSON.parse(JSON.stringify(obj))\r\n\t\tconsole.log('data is being peristed to indexedDB as: ', obj)\r\n    dbcontext\r\n        .then(db => {\r\n          const tx = db.transaction('BatteryNotifierList', 'readwrite');\r\n          tx.objectStore('BatteryNotifierList').clear();\r\n\t\t\t\t\ttx.objectStore('BatteryNotifierList').put({...obj})\r\n          return tx.complete;\r\n        })\r\n        .catch(err => {\r\n          console.log(`Error: ${err}`)\r\n          return false;\r\n        });\r\n  },\r\n\r\n  getItemsLocally: async (dbcontext) => {\r\n    let listItems = new Set();\r\n    return dbcontext\r\n\t\t\t\t\t\t.then(db => {\r\n\t\t\t\t\t\t\treturn db.transaction('BatteryNotifierList').objectStore('BatteryNotifierList').getAll();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.then(allObjs => {\r\n\t\t\t\t\t\t\t[...allObjs].map(s => listItems.add({ ...s }));\r\n\t\t\t\t\t\t\treturn listItems;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.catch(err => {\r\n\t\t\t\t\t\t\tconsole.log(`Error: ${err}`)\r\n\t\t\t\t\t\t\treturn listItems;\r\n\t\t\t\t\t\t});\r\n\t},\r\n}\r\n\r\nexport default Utils;\r\n","module.exports = __webpack_public_path__ + \"static/media/ic_launcher.c27cbeed.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if ('serviceWorker' in navigator && process.env.NODE_ENV === 'production') {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {              \r\n              //Install stage sets up the index page (home page) in the cache and opens a new cache\r\n              window.addEventListener('install', function(event) {\r\n                var indexPage = new Request('index.html');\r\n                event.waitUntil(\r\n                  fetch(indexPage).then(function(response) {\r\n                    return caches.open('pwabuilder-offline').then(function(cache) {\r\n                      console.log('[PWA Builder] Cached index page during Install'+ response.url);\r\n                      return cache.put(indexPage, response);\r\n                    });\r\n                }));\r\n              });\r\n\r\n              //If any fetch fails, it will look for the request in the cache and serve it from there first\r\n              window.addEventListener('fetch', function(event) {\r\n                var updateCache = function(request){\r\n                  return caches.open('pwabuilder-offline').then(function (cache) {\r\n                    return fetch(request).then(function (response) {\r\n                      console.log('[PWA Builder] add page to offline'+response.url)\r\n                      return cache.put(request, response);\r\n                    });\r\n                  });\r\n                };\r\n\r\n                event.waitUntil(updateCache(event.request));\r\n\r\n                event.respondWith(\r\n                  fetch(event.request).catch(function(error) {\r\n                    console.log( '[PWA Builder] Network request Failed. Serving content from cache: ' + error );\r\n\r\n                    //Check to see if you have it in the cache\r\n                    //Return response\r\n                    //If not in the cache, then return error page\r\n                    return caches.open('pwabuilder-offline').then(function (cache) {\r\n                      return cache.match(event.request).then(function (matching) {\r\n                        var report =  !matching || matching.status === 404?Promise.reject('no-match'): matching;\r\n                        return report\r\n                      });\r\n                    });\r\n                  })\r\n                );\r\n              })\r\n\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { injectGlobal } from \"styled-components\";\r\n\r\ninjectGlobal`\r\n@import url('https://fonts.googleapis.com/css?family=Noto+Sans');\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: \"Noto Sans\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\r\n      \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\r\n      sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n  \r\n  .rootDiv {\r\n    text-align:center;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"./global-styles\";\r\nimport Utils from \"./Components/Utils\";\r\nconst Container = React.lazy(() => import('./Components/Container'));\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<Router >\r\n   \t\t<React.Suspense fallback={Utils.loadingMessage()} >\r\n\t\t\t\t<Container />\r\n\t\t\t</React.Suspense>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}